#!/bin/bash

echo ""
echo "Applying migration claimPeriod"

echo "Adding routes to conf/app.routes"

echo "" >> ../conf/app.routes
echo "GET        /claimPeriod                        controllers.claimPeriodController.onPageLoad(mode: Mode = NormalMode)" >> ../conf/app.routes
echo "POST       /claimPeriod                        controllers.claimPeriodController.onSubmit(mode: Mode = NormalMode)" >> ../conf/app.routes

echo "GET        /changeclaimPeriod                  controllers.claimPeriodController.onPageLoad(mode: Mode = CheckMode)" >> ../conf/app.routes
echo "POST       /changeclaimPeriod                  controllers.claimPeriodController.onSubmit(mode: Mode = CheckMode)" >> ../conf/app.routes

echo "Adding messages to conf.messages"
echo "" >> ../conf/messages.en
echo "claimPeriod.title = What's your" >> ../conf/messages.en
echo "claimPeriod.heading = What's your" >> ../conf/messages.en
echo "claimPeriod.xxxxx = yyyy" >> ../conf/messages.en
echo "claimPeriod.aaaaa = bbbbbb" >> ../conf/messages.en
echo "claimPeriod.checkYourAnswersLabel = What's your" >> ../conf/messages.en
echo "claimPeriod.error.required = Select claimPeriod" >> ../conf/messages.en

echo "Adding to UserAnswersEntryGenerators"
awk '/  self: Generators =>/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryclaimPeriodUserAnswersEntry: Arbitrary[(claimPeriodPage.type, JsValue)] =";\
    print "    Arbitrary {";\
    print "      for {";\
    print "        page  <- arbitrary[claimPeriodPage.type]";\
    print "        value <- arbitrary[claimPeriod].map(Json.toJson(_))";\
    print "      } yield (page, value)";\
    print "    }";\
    next }1' ../test/generators/UserAnswersEntryGenerators.scala > tmp && mv tmp ../test/generators/UserAnswersEntryGenerators.scala

echo "Adding to PageGenerators"
awk '/trait PageGenerators/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryclaimPeriodPage: Arbitrary[claimPeriodPage.type] =";\
    print "    Arbitrary(claimPeriodPage)";\
    next }1' ../test/generators/PageGenerators.scala > tmp && mv tmp ../test/generators/PageGenerators.scala

echo "Adding to ModelGenerators"
awk '/  self: Generators =>/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryclaimPeriod: Arbitrary[claimPeriod] =";\
    print "    Arbitrary {";\
    print "      Gen.oneOf(claimPeriod.values)";\
    print "    }";\
    next }1' ../test/generators/ModelGenerators.scala > tmp && mv tmp ../test/generators/ModelGenerators.scala

echo "Adding to UserAnswersGenerator"
awk '/val generators/ {\
    print;\
    print "    arbitrary[(claimPeriodPage.type, JsValue)] ::";\
    next }1' ../test/generators/UserAnswersGenerator.scala > tmp && mv tmp ../test/generators/UserAnswersGenerator.scala

echo "Migration claimPeriod completed"
