#!/bin/bash

echo ""
echo "Applying migration BusinessClosed"

echo "Adding routes to conf/app.routes"

echo "" >> ../conf/app.routes
echo "GET        /businessClosed                        controllers.BusinessClosedController.onPageLoad(mode: Mode = NormalMode)" >> ../conf/app.routes
echo "POST       /businessClosed                        controllers.BusinessClosedController.onSubmit(mode: Mode = NormalMode)" >> ../conf/app.routes

echo "GET        /changeBusinessClosed                  controllers.BusinessClosedController.onPageLoad(mode: Mode = CheckMode)" >> ../conf/app.routes
echo "POST       /changeBusinessClosed                  controllers.BusinessClosedController.onSubmit(mode: Mode = CheckMode)" >> ../conf/app.routes

echo "Adding messages to conf.messages"
echo "" >> ../conf/messages.en
echo "businessClosed.title = Was your business closed and unable to trade during this claim?" >> ../conf/messages.en
echo "businessClosed.heading = Was your business closed and unable to trade during this claim?" >> ../conf/messages.en
echo "businessClosed.yes = yes" >> ../conf/messages.en
echo "businessClosed.no = no" >> ../conf/messages.en
echo "businessClosed.checkYourAnswersLabel = Was your business closed and unable to trade during this claim?" >> ../conf/messages.en
echo "businessClosed.error.required = Select businessClosed" >> ../conf/messages.en

echo "Adding to UserAnswersEntryGenerators"
awk '/  self: Generators =>/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryBusinessClosedUserAnswersEntry: Arbitrary[(BusinessClosedPage.type, JsValue)] =";\
    print "    Arbitrary {";\
    print "      for {";\
    print "        page  <- arbitrary[BusinessClosedPage.type]";\
    print "        value <- arbitrary[BusinessClosed].map(Json.toJson(_))";\
    print "      } yield (page, value)";\
    print "    }";\
    next }1' ../test/generators/UserAnswersEntryGenerators.scala > tmp && mv tmp ../test/generators/UserAnswersEntryGenerators.scala

echo "Adding to PageGenerators"
awk '/trait PageGenerators/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryBusinessClosedPage: Arbitrary[BusinessClosedPage.type] =";\
    print "    Arbitrary(BusinessClosedPage)";\
    next }1' ../test/generators/PageGenerators.scala > tmp && mv tmp ../test/generators/PageGenerators.scala

echo "Adding to ModelGenerators"
awk '/  self: Generators =>/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryBusinessClosed: Arbitrary[BusinessClosed] =";\
    print "    Arbitrary {";\
    print "      Gen.oneOf(BusinessClosed.values)";\
    print "    }";\
    next }1' ../test/generators/ModelGenerators.scala > tmp && mv tmp ../test/generators/ModelGenerators.scala

echo "Adding to UserAnswersGenerator"
awk '/val generators/ {\
    print;\
    print "    arbitrary[(BusinessClosedPage.type, JsValue)] ::";\
    next }1' ../test/generators/UserAnswersGenerator.scala > tmp && mv tmp ../test/generators/UserAnswersGenerator.scala

echo "Migration BusinessClosed completed"
