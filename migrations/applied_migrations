#!/bin/bash

echo ""
echo "Applying migration PayPeriodsList"

echo "Adding routes to conf/app.routes"

echo "" >> ../conf/app.routes
echo "GET        /payPeriodsList                        controllers.PayPeriodsListController.onPageLoad(mode: Mode = NormalMode)" >> ../conf/app.routes
echo "POST       /payPeriodsList                        controllers.PayPeriodsListController.onSubmit(mode: Mode = NormalMode)" >> ../conf/app.routes

echo "GET        /changePayPeriodsList                  controllers.PayPeriodsListController.onPageLoad(mode: Mode = CheckMode)" >> ../conf/app.routes
echo "POST       /changePayPeriodsList                  controllers.PayPeriodsListController.onSubmit(mode: Mode = CheckMode)" >> ../conf/app.routes

echo "Adding messages to conf.messages"
echo "" >> ../conf/messages.en
echo "payPeriodsList.title = Are these pay periods correct?" >> ../conf/messages.en
echo "payPeriodsList.heading = Are these pay periods correct?" >> ../conf/messages.en
echo "payPeriodsList.yes = yes" >> ../conf/messages.en
echo "payPeriodsList.no = no" >> ../conf/messages.en
echo "payPeriodsList.checkYourAnswersLabel = Are these pay periods correct?" >> ../conf/messages.en
echo "payPeriodsList.error.required = Select payPeriodsList" >> ../conf/messages.en

echo "Adding to UserAnswersEntryGenerators"
awk '/  self: Generators =>/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryPayPeriodsListUserAnswersEntry: Arbitrary[(PayPeriodsListPage.type, JsValue)] =";\
    print "    Arbitrary {";\
    print "      for {";\
    print "        page  <- arbitrary[PayPeriodsListPage.type]";\
    print "        value <- arbitrary[PayPeriodsList].map(Json.toJson(_))";\
    print "      } yield (page, value)";\
    print "    }";\
    next }1' ../test/generators/UserAnswersEntryGenerators.scala > tmp && mv tmp ../test/generators/UserAnswersEntryGenerators.scala

echo "Adding to PageGenerators"
awk '/trait PageGenerators/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryPayPeriodsListPage: Arbitrary[PayPeriodsListPage.type] =";\
    print "    Arbitrary(PayPeriodsListPage)";\
    next }1' ../test/generators/PageGenerators.scala > tmp && mv tmp ../test/generators/PageGenerators.scala

echo "Adding to ModelGenerators"
awk '/  self: Generators =>/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryPayPeriodsList: Arbitrary[PayPeriodsList] =";\
    print "    Arbitrary {";\
    print "      Gen.oneOf(PayPeriodsList.values)";\
    print "    }";\
    next }1' ../test/generators/ModelGenerators.scala > tmp && mv tmp ../test/generators/ModelGenerators.scala

echo "Adding to UserAnswersGenerator"
awk '/val generators/ {\
    print;\
    print "    arbitrary[(PayPeriodsListPage.type, JsValue)] ::";\
    next }1' ../test/generators/UserAnswersGenerator.scala > tmp && mv tmp ../test/generators/UserAnswersGenerator.scala

echo "Migration PayPeriodsList completed"
